--Solutions for sqlzoo.net

--SELECT basics


--1.show the population of germany

SELECT population 
FROM world
WHERE name = 'Germany';

--2.show the name and population for sweden, norway, and denmark

SELECT name, population 
FROM world
WHERE name IN ('Sweden', 'Norway', 'Denmark');

--3.show the countries and the area for countries with an area between 200,000 and 250,000

SELECT name, area 
FROM world
WHERE area BETWEEN 200000 AND 250000;


--SELECT from WORLD


--1.show the name, continent, and population

SELECT name, continent, population 
FROM world;

--2.query the name for the countries that have a population of at least 200 million

SELECT name 
FROM world
WHERE population >= 200000000;

--3.query the name and the per capita gdp for countries with a population of at least 200 million

SELECT name, gdp/population AS per_capita_gdp
FROM world
WHERE population >= 200000000;

--4.query the name and population (in millions) for the countries in south america

SELECT name, population/1000000
FROM world
WHERE continent = 'South America';

--5.query the name and population for france, germany, and italy

SELECT name, population
FROM world
WHERE name IN ('France','Germany','Italy');

--6.show the countries that include ‘united’ in the name

SELECT name
FROM world
WHERE name LIKE '%United%';

--7.query the name, population, and area for countries that have an area of more than 3 million sq km or a population of more than 250 million

SELECT name, population, area
FROM world
WHERE area > 3000000 
OR population > 250000000;

--8.show the name, population, and area of countries that have more than 3 million sq km or a population of more than 250 million, but not both.

SELECT name, population, area
FROM world
WHERE (area > 3000000 OR population > 250000000)
AND name NOT IN (SELECT name
FROM world
WHERE area > 3000000 
AND population > 250000000);

--9.query the name, population (in millions), and gdp (in billions) for all countries in south america -round to 2 decimal places

SELECT name, ROUND(population/1000000,2), ROUND(gdp/1000000000,2)
FROM world
WHERE continent = 'South America';

--10.query the name and per capita gdp for the countries with gdp of at least 1 trillion -round to nearest 1000

SELECT name, ROUND(gdp/population,-3)
FROM world
WHERE gdp >=1000000000000;

--11.show the name and capital where the name and the capital have the same number of characters

SELECT capital, name
FROM world
WHERE LEN(name)=LEN(capital);

--12.show the names and capitals that share the same first letter -do not include names and capitals that are the same word

SELECT name, capital
FROM world
WHERE LEFT(name,1)=LEFT(capital,1) AND name <> capital;

--13.show all the countries that contain all the vowels but no spaces in its name

SELECT name
FROM world
WHERE name LIKE '%a%' 
AND name LIKE '%e%'
AND name LIKE '%i%'
AND name LIKE '%o%'
AND name LIKE '%u%'
AND name NOT LIKE '% %';


--SELECT from NOBEL


--1.show the year, subject, and winner for the nobel prizes in 1950

SELECT yr, subject, winner
FROM nobel
WHERE yr = 1950;

--2.show the winner for the 1962 nobel prize in literature 

SELECT winner
FROM nobel
WHERE yr = 1962
AND subject = 'Literature';

--3.show the year and subject that won albert einstein his prize

SELECT yr, subject
FROM nobel
WHERE winner = 'Albert Einstein';

--4.give the name of the 'peace' winners since the year 2000, including 2000 

SELECT winner
FROM nobel
WHERE yr >= 2000
AND subject = 'Peace';

--5.query all details of the literature prize winners from 1980 to 1989 inclusive

SELECT *
FROM nobel
WHERE subject = 'Literature'
AND yr BETWEEN 1980 AND 1989;

--6.query all details of the presidential winners (Theodore Roosevelt, Woodrow Wilson, Jimmy Carter, and Barack Obama)

SELECT * 
FROM nobel
WHERE winner IN ('Theodore Roosevelt', 'Woodrow Wilson', 'Jimmy Carter', 'Barack Obama');

--7.show the winners with the first name John 

SELECT winner
FROM nobel
WHERE winner LIKE 'John%';

--8.show the year, subject, and name of physics winners for 1980 together along with the chemistry winners for 1984

SELECT yr, subject, winner
FROM nobel
WHERE (subject = 'Physics' AND yr = 1980)
OR (subject = 'Chemistry' AND yr = 1984);

--9.show the year, subject, and name of winners for 1980 excluding chemistry and medicine 

SELECT yr, subject, winner
FROM nobel
WHERE yr = 1980
AND subject NOT IN ('Chemistry', 'Medicine');

--10.show the year, subject, and name of people who won a 'Medicine' prize in an early year (before 1910, not including 1910) together with winners of a 'Literature' prize in a later year (after 2004, including 2004)

SELECT yr, subject, winner
FROM nobel
WHERE (subject = 'Medicine' AND yr < 1910)
OR (subject = 'Literature' AND yr >= 2004);

--Harder Questions

--11.show all details of the prize won by PETER GRÜNBERG

SELECT *
FROM nobel
WHERE winner = 'PETER GRÜNBERG';

--12.show all details of the prize won by EUGENE O'NEILL 
SELECT * 
FROM nobel
WHERE winner = 'EUGENE O''NEILL';

--13.show the winners, year and subject where the winner starts with ‘Sir’. Show the most recent first, then by name order. 

SELECT winner, yr, subject
FROM nobel
WHERE winner LIKE 'Sir%'
ORDER BY yr DESC, winner ASC;

--14.SHOW the 1984 winners and subject ordered by subject and winner name, but list chemistry and physics last 

SELECT winner, subject
FROM nobel
WHERE yr=1984
ORDER BY 
CASE WHEN subject IN ('Physics','Chemistry') THEN 1 
ELSE 0 END,
subject,winner;


--SELECT within SELECT


--1. List each country name where the population is larger than that of 'Russia'.

SELECT name 
FROM world
WHERE population >
(SELECT population 
FROM world
WHERE name='Russia');

--2. Show the countries in Europe with a per capita GDP greater than 'United Kingdom'. 

SELECT name
FROM world
WHERE continent = 'Europe'
AND (gdp/population) >
(SELECT gdp/population
FROM world
WHERE name = 'United Kingdom');

--3.List the name and continent of countries in the continents containing either Argentina or Australia. Order by name of the country. 

SELECT name, continent
FROM world
WHERE continent IN
(SELECT continent
FROM world
WHERE name IN ('Argentina', 'Australia'))
ORDER BY name;

--4.Which country has a population that is more than United Kingom but less than Germany? Show the name and the population. 

SELECT name, population
FROM world
WHERE population >
(SELECT population
FROM world
WHERE name = 'United Kingdom')
AND population <
(SELECT population
FROM world
WHERE name = 'Germany');

--5.Show the name and the population of each country in Europe. Show the population as a percentage of the population of Germany. 

SELECT name, CONCAT(ROUND(population/(SELECT population FROM world WHERE name = 'Germany')*100),'%') AS percentage
FROM world
WHERE continent = 'Europe';

--6.Which countries have a GDP greater than every country in Europe? 

SELECT name
FROM world
WHERE gdp > 
(SELECT MAX(gdp)
FROM world
WHERE continent = 'Europe');


--SUM and COUNT


--1.Show the total population of the world. 

SELECT SUM(population)
FROM world;

--2.List all the continents - just once each. 

SELECT DISTINCT continent
FROM world;

--3.Give the total GDP of Africa 

SELECT SUM(gdp)
FROM world
WHERE continent = 'Africa';

--4.How many countries have an area of at least 1000000 

SELECT COUNT(name)
FROM world
WHERE area >=1000000;

--5.What is the total population of ('Estonia', 'Latvia', 'Lithuania') ?

SELECT SUM(population)
FROM world
WHERE name IN ('Estonia', 'Latvia', 'Lithuania');

--6.For each continent show the continent and number of countries. 

SELECT continent, COUNT(name)
FROM world
GROUP BY continent;

--7.For each continent show the continent and number of countries with populations of at least 10 million. 

SELECT continent, COUNT(name)
FROM world
WHERE population >= 10000000
GROUP BY continent;

--8.List the continents that have a total population of at least 100 million.

SELECT continent
FROM world
GROUP BY continent
HAVING SUM(population) >= 100000000;


--The JOIN Operation


--1.Show the matchid and player name for all goals scored by Germany. 

SELECT matchid, player
FROM goal 
WHERE teamid = 'GER';

--2.Show id, stadium, team1, team2 for just game 1012 

SELECT id, stadium, team1, team2
FROM game
WHERE id = 1012;

--3.Show the player, teamid, stadium and match date for every German goal.

SELECT player, teamid, stadium, mdate
FROM game 
JOIN goal 
ON (id=matchid) 
WHERE teamid = 'GER';

--4.Show the team1, team2 and player for every goal scored by a player called Mario.

SELECT team1, team2, player
FROM game
JOIN goal
ON id=matchid
WHERE player LIKE '%Mario%';

--5.Show player, teamid, coach, game time for all goals scored in the first 10 minutes.

SELECT player, teamid, coach, gtime
FROM goal 
JOIN eteam
ON teamid=id
WHERE gtime<=10;

--6.List the dates of the matches and the name of the team in which 'Fernando Santos' was the team1 coach. 

SELECT mdate, teamname
FROM game
JOIN eteam
ON game.team1=eteam.id
WHERE coach = 'Fernando Santos';

--7.List the player for every goal scored in a game where the stadium was 'National Stadium, Warsaw'.

SELECT player
FROM goal
JOIN game
ON matchid=id
WHERE stadium = 'National Stadium, Warsaw';

--8.Show the name of all players who scored a goal against Germany. 

SELECT DISTINCT player
FROM goal 
JOIN game
ON matchid = id 
WHERE (team1 = 'GER' OR team2 = 'GER')
AND teamid <> 'GER';

--9.Show teamname and the total number of goals scored. 

SELECT teamname, COUNT(matchid)
FROM eteam 
JOIN goal 
ON id=teamid
GROUP BY teamname;

--10.Show the stadium and the number of goals scored in each stadium. 

SELECT stadium, COUNT(matchid)
FROM game
JOIN goal
ON id=matchid
GROUP BY stadium;

--11.For every match involving Poland, show the matchid, date and the number of goals scored.

SELECT matchid, mdate, COUNT(matchid)
FROM game 
JOIN goal 
ON matchid = id 
WHERE team1 = 'POL' OR team2 = 'POL'
GROUP BY matchid, mdate;

--12.For every match where Germany scored, show matchid, match date and the number of goals scored by Germany'.

SELECT matchid, mdate, COUNT(matchid)
FROM goal
JOIN game
ON matchid=id
WHERE teamid = 'GER'
GROUP BY matchid, mdate;

--13.Show the date and each team with their respective scores. Sort your result by mdate, matchid, team1 and team2. 

SELECT mdate, team1, SUM(
CASE 
WHEN teamid=team1 THEN 1
ELSE 0 END) AS score1, team2, SUM(
CASE
WHEN teamid=team2 THEN 1
ELSE 0 END) AS score2
FROM game
LEFT JOIN goal
ON id=matchid
GROUP BY mdate, matchid, team1, team2
ORDER BY mdate, matchid, team1, team2;


--More JOIN Operations


--1.List the films where the yr is 1962 

SELECT id, title
FROM movie
WHERE yr=1962;

--2.When was Citizen Kane released?

SELECT yr
FROM movie
WHERE title = 'Citizen Kane';

--3.List all of the Star Trek movies, include the id, title and yr. Order results by year. 

SELECT id, title, yr
FROM movie
WHERE title LIKE '%Star Trek%'
ORDER BY yr;

--4.What id number does the actor 'Glenn Close' have?

SELECT id
FROM actor
WHERE name = 'Glenn Close';

--5.What is the id of the film 'Casablanca’?

SELECT id
FROM movie
WHERE title = 'Casablanca';

--6.Obtain the cast list for 'Casablanca'

SELECT a.name 
FROM actor AS a
JOIN casting AS c
ON a.id = c.actorid
JOIN movie AS m
ON m.id = c.movieid
WHERE m.title = 'Casablanca';

--7.Obtain the cast list for the film 'Alien' 

SELECT a.name
FROM actor AS a
JOIN casting AS c
ON a.id = c.actorid
JOIN movie AS m
ON m.id = c.movieid
WHERE m.title = 'Alien';

--8. List the films in which 'Harrison Ford' has appeared 

SELECT m.title
FROM movie AS m
JOIN casting AS c
ON m.id = c.movieid
JOIN actor AS a
ON a.id = c.actorid
WHERE a.name = 'Harrison Ford';

--9.List the films where 'Harrison Ford' has appeared - but not in the starring role. 

SELECT m.title
FROM movie AS m
JOIN casting AS c
ON m.id = c.movieid
JOIN actor AS a
ON a.id = c.actorid
WHERE a.name = 'Harrison Ford'
AND ord <> 1;

--10.List the films together with the leading star for all 1962 films.

SELECT m.title, a.name
FROM movie AS m
JOIN casting AS c
ON m.id = c.movieid
JOIN actor AS a
ON a.id = c.actorid
WHERE m.yr = 1962
AND c.ord = 1;

--Harder Questions

--11.Which were the busiest years for 'Rock Hudson'? Show the year and the number of movies he made each year for any year in which he made more than 2 movies 

SELECT yr, COUNT(m.title)
FROM movie AS m 
JOIN casting AS c
ON m.id = c.movieid
JOIN actor AS a
ON a.id = c.movieid
WHERE a.name = 'Rock Hudson'
GROUP BY yr
HAVING COUNT(m.title) > 2;

--12.List the film title and the leading actor for all of the films 'Julie Andrews' played in.

SELECT m.title, a.name
FROM movie AS m
JOIN casting AS c
ON m.id = c.movieid
JOIN actor AS a
ON a.id = c.actorid
WHERE c.movieid IN (
SELECT c.movieid
FROM casting AS c
JOIN movie AS m
ON m.id = c.movieid
JOIN actor AS a
ON a.id = c.actorid
WHERE a.name = 'Julie Andrews')
AND c.ord = 1;

--13.Obtain a list, in alphabetical order, of actors who've had at least 15 starring roles 

SELECT DISTINCT a.name
FROM actor AS a
JOIN casting AS c
ON a.id = c.actorid
WHERE c.actorid IN (
SELECT actorid
FROM casting
WHERE ord = 1
GROUP BY actorid
HAVING COUNT(ord)>14)
ORDER BY a.name;

--14.List the films released in the year 1978 ordered by the number of actors in the cast, then by title. 

SELECT m.title, COUNT(c.actorid)
FROM movie AS m
JOIN casting AS c
ON m.id = c.movieid
WHERE m.yr = 1978
GROUP BY m.title
ORDER BY COUNT(c.actorid) DESC, m.title;

--15.List all the people who have worked with 'Art Garfunkel'. 

SELECT a.name
FROM actor AS a
JOIN casting AS c
ON a.id = c.actorid
JOIN movie AS m
ON m.id = c.movieid
WHERE a.name <> 'Art Garfunkel'
AND c.movieid IN (
SELECT c.movieid
FROM casting AS C
JOIN actor AS a
ON a.id = c.actorid
WHERE a.name = 'Art Garfunkel');


--Using Null


--1.List the teachers who have NULL for their department. 

SELECT name
FROM teacher
WHERE dept IS NULL;

--2.Show teacher name and department with no null values.

SELECT t.name, d.name
FROM teacher AS t
INNER JOIN dept AS d
ON t.dept=d.id;

--3.Show teacher name and department name, listing all teachers.

SELECT t.name, d.name
FROM teacher AS t
LEFT JOIN dept AS d
ON t.dept = d.id;

--4.Show teacher name and department name, listing all departments.

SELECT t.name, d.name
FROM teacher AS t
RIGHT JOIN dept AS d
ON t.dept = d.id;

--5.Show teacher name and mobile number or '07986 444 2266' 

SELECT name, COALESCE(mobile, '07986 444 2266')
FROM teacher;

--6.Print the teacher name and department name. Use the string 'None' where there is no department. 

SELECT t.name, COALESCE(d.name, 'None')
FROM teacher AS t
LEFT JOIN dept AS d
ON t.dept = d.id;

--7.Show the number of teachers and the number of mobile phones. 

SELECT COUNT(name), COUNT(mobile)
FROM teacher;

--8.Show each department and the number of staff.

SELECT d.name, COUNT(t.name)
FROM dept AS d
LEFT JOIN teacher AS t
ON d.id = t.dept
GROUP BY d.name;

--9.Show the name of each teacher followed by 'Sci' if the teacher is in dept 1 or 2 and 'Art' otherwise. 
SELECT name,
CASE
WHEN dept IN (1,2) THEN 'Sci'
ELSE 'Art'
END
FROM teacher;

--10.Show the name of each teacher followed by 'Sci' if the teacher is in dept 1 or 2, show 'Art' if the teacher's dept is 3 and 'None' otherwise. 
SELECT name,
CASE
WHEN dept IN (1,2) THEN 'Sci'
WHEN dept = 3 THEN 'Art'
ELSE 'None'
END
FROM teacher;


--Numeric Examples --NSS Tutorial 


--1.Show the the percentage who strongly agree with question 1 at 'Edinburgh Napier University' studying '(8) Computer Science'

SELECT a_strongly_agree
FROM nss
WHERE question='Q01'
AND institution='Edinburgh Napier University'
AND subject='(8) Computer Science';

--2.Show the institution and subject where the score is at least 100 for question 15. 

SELECT institution, subject
FROM nss
WHERE question = 'Q15'
AND score >= 100;

--3.Show the institution and score where the score for '(8) Computer Science' is less than 50 for question 'Q15' 

SELECT institution, score
FROM nss
WHERE score < 50
AND question = 'Q15'
AND subject = '(8) Computer Science';

--4.Show the subject and total number of students who responded to question 22 for each of the subjects '(8) Computer Science' and '(H) Creative Arts and Design'

SELECT subject, SUM(response)
FROM nss
WHERE question = 'Q22'
AND subject IN ('(8) Computer Science','(H) Creative Arts and Design')
GROUP BY subject';

--5.Show the subject and total number of students who strongly agree to question 22 for each of the subjects '(8) Computer Science' and '(H) Creative Arts and Design'. 

SELECT subject, SUM(a_strongly_agree*response/100)
FROM nss
WHERE question = 'Q22'
AND subject IN ('(8) Computer Science','(H) Creative Arts and Design')
GROUP BY subject;


--Window functions


--1.Show the last name, party, and votes for the constituency 'S14000024' in 2017 

SELECT lastName, party, votes
FROM ge
WHERE constituency = 'S14000024' AND yr = 2017
ORDER BY votes DESC;

--2.Show the party and rank for constituency S14000024 in 2017. List the output by party

SELECT party, votes,
RANK () OVER (ORDER BY votes DESC) AS posn
FROM ge
WHERE constituency = 'S14000024'
and YR = 2017
ORDER BY party;

--3.Show the ranking of each party in S14000021 in each year. Include yr, party, votes and ranking

SELECT yr, party, votes,
RANK() OVER (PARTITION BY yr ORDER BY votes DESC) AS posn
FROM ge
WHERE constituency = 'S14000021';

--4.Show the ranking of each constituency numbered S14000021 to S14000026 in Edinburgh in 2017. Order your results so the winners are shown first, then ordered by constituency 
 
SELECT constituency, party, votes,
RANK () OVER (PARTITION BY constituency ORDER BY votes DESC) AS posn
FROM ge
WHERE yr = 2017
AND constituency BETWEEN 'S14000021' AND 'S14000026'
ORDER BY posn, constituency;

--5.Show the parties that won for each Edinburgh constituency in 2017. 

SELECT constituency, party
FROM (
SELECT constituency, party, votes,
RANK() OVER (PARTITION BY constituency ORDER BY votes DESC) AS posn
FROM ge
WHERE constituency BETWEEN 'S14000021' AND 'S14000026'
AND yr  = 2017
)
TAB WHERE posn = 1;

--6.Show how many seats for each party in Scotland in 2017. 

SELECT party, COUNT(constituency)
FROM (
SELECT party, constituency, votes,
RANK () OVER (PARTITION BY constituency ORDER BY votes DESC) AS posn
FROM ge
WHERE constituency LIKE 'S%'
AND yr = 2017
)
TAB WHERE posn = 1
GROUP BY party;


--Self Join


--1.How many stops are in the database?

SELECT COUNT(id)
FROM stops;

--2.Find the id value for the stop 'Craiglockhart'.

SELECT id
FROM stops
WHERE name = 'Craiglockhart';

--3.Give the id and the name for the stops on the '4' 'LRT' service. 

SELECT s.id, s.name
FROM stops AS s
JOIN route AS r
ON s.id = r.stop
WHERE r.company = 'LRT' 
AND r.num = '4';

--4.Show the company, num, and number of routes that link London Road and Craiglockhart 

SELECT company, num, COUNT(*)
FROM route 
WHERE stop=149 
OR stop=53
GROUP BY company, num
HAVING COUNT(*) = 2;

--5.Show the services from Craiglockhart(53) to London Road(149). 

SELECT a.company, a.num, a.stop, b.stop
FROM route a 
JOIN route b 
ON a.company=b.company AND a.num=b.num
WHERE a.stop=53 
AND b.stop=149;

--6.Show the services from Craiglockhart to London Road, showing the name

SELECT ra.company, ra.num, sa.name, sb.name
FROM route AS ra 
JOIN route AS rb 
ON ra.company=rb.company AND ra.num=rb.num
JOIN stops AS sa 
ON ra.stop=sa.id
JOIN stops AS sb 
ON rb.stop=sb.id
WHERE sa.name = 'Craiglockhart'
AND sb.name = 'London Road';

--7.Give a list of all the services which connect stops 115 and 137 

SELECT DISTINCT a.company, a.num
FROM route AS a
JOIN route AS b
ON a.company=b.company AND a.num=b.num
WHERE a.stop = 115
AND b.stop = 137;

--8.Give a list of the services which connect the stops 'Craiglockhart' and 'Tollcross'

SELECT ra.company, ra.num
FROM route AS ra
JOIN stops AS sa
ON ra.stop = sa.id
JOIN route AS rb
ON ra.company=rb.company AND ra.num=rb.num
JOIN stops AS sb
ON rb.stop = sb.id
WHERE sa.name = 'Craiglockhart'
AND sb.name = 'Tollcross';

--9.Give a distinct list of the stops which may be reached from 'Craiglockhart' by taking one bus, including 'Craiglockhart' itself, offered by the LRT company. Include the company and bus no. of the relevant services. 

SELECT DISTINCT sa.name, ra.company, rb.num
FROM route AS ra
JOIN stops AS sa
ON ra.stop = sa.id
JOIN route AS rb
ON ra.company=rb.company AND ra.num=rb.num
JOIN stops AS sb
ON rb.stop = sb.id
WHERE sa.name = 'Craiglockhart' 
or sb.name = 'Craiglockhart';

--10.Find the routes involving two buses that can go from Craiglockhart to Lochend. Show the bus no. and company for the first bus, the name of the stop for the transfer, and the bus no. and company for the second bus. 

SELECT DISTINCT ra.num, ra.company, sb.name, rd.num, rd.company
FROM route AS ra 
JOIN route AS rb
ON ra.company = rb.company AND ra.num = rb.num
JOIN route AS rc 
ON rb.company = rc.company AND rb.num = rc.num
JOIN route AS rd 
ON rc.company = rd.company AND rc.num= rd.num
JOIN stops AS sa 
ON ra.stop = sa.id
JOIN stops AS sb 
ON rb.stop = sb.id
JOIN stops AS sc 
ON rc.stop = sc.id
JOIN stops AS sd 
ON rd.stop = sd.id
WHERE sa.name = 'Craiglockhart' 
AND sd.name = 'Lochend'
AND sb.name = sc.name;
