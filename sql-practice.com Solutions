--sql-practice.com


--Easy


--1.Show first name, last name, and gender of patients who's gender is 'M' 

SELECT first_name, last_name, gender 
FROM patients 
WHERE gender = 'M';

--2.Show first name and last name of patients who does not have allergies.

SELECT first_name, last_name
FROM patients
WHERE allergies IS NULL;

--3.Show first name of patients that start with the letter 'C'.

SELECT first_name
FROM patients
WHERE first_name LIKE 'c%';

--4.Show first name and last name of patients that weight within the range of 100 to 120.

SELECT first_name, last_name
FROM patients
WHERE weight BETWEEN 100 AND 120;

--5.Update the patients table for the allergies column. If the patient's allergies is null, then replace it with 'NKA'.

UPDATE patients
SET allergies = 'NKA'
WHERE allergies IS NULL;

--6.Show first name and last name concatinated into one column to show their full name. 

SELECT CONCAT(first_name, ' ', last_name) AS name
FROM patients;
 
--7.Show first name, last name, and the full province name of each patient.

SELECT first_name, last_name, province_name
FROM patients
JOIN provinces
ON patients.province_id=provinces.province_id;

--8.Show how many patients have a birth_date with 2010 as the birth year. 

SELECT COUNT(*)
FROM patients
WHERE YEAR(birth_date)=2010;

--9.Show the first_name, last_name, and height of the patient with the greatest height. 

SELECT first_name, last_name, MAX(height) AS height
FROM patients;

--10.Show all columns for patients who have one of the following patient_ids: 1, 45, 534, 879, 1000.

SELECT *
FROM patients
WHERE patient_id IN (1,45,534,879,1000);

--11.Show the total number of admissions.

SELECT count(*)
FROM admissions;

--12.Show all the columns from admissions where the patient was admitted and discharged on the same day. 

SELECT *
FROM admissions
WHERE admission_date=discharge_date;

--13.Show the total number of admissions for patient_id 573. 

SELECT patient_id, count(*)
FROM admissions
WHERE patient_id=573;

--14.Based on the cities that our patients live in, show unique cities that are in province_id 'NS'? 

SELECT DISTINCT city
FROM patients
WHERE province_id = 'NS';

--15.Write a query to find the first_name, last name, and birth date of patients who have height more than 160 and weight more than 70.

SELECT first_name, last_name, birth_date
FROM patients
WHERE height > 160
AND weight > 70;

--16.Write a query to find list of patients first_name, last_name, and allergies from Hamilton where allergies are not NKA.

SELECT first_name, last_name, allergies
FROM patients
WHERE city = 'Hamilton'
AND allergies <> 'NKA';


--Medium


--1.Show unique birth years from patients and order them by ascending.
 
SELECT DISTINCT YEAR(birth_date) AS birth_year
FROM patients
ORDER BY birth_year;

--2.Show unique first names from the patients table which only occurs once in the list. 

SELECT first_name
FROM patients
GROUP BY first_name
HAVING COUNT(first_name)<2;

--3.Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long. 

SELECT patient_id, first_name
FROM patients
WHERE first_name LIKE 's%s'
AND LEN(first_name)>=6;

--4.Show patient_id, first_name, last_name from patients whose primary_diagnosis is 'Dementia'.

SELECT p.patient_id, p.first_name, p.last_name
FROM patients AS p
JOIN admissions AS a
ON p.patient_id=a.patient_id
WHERE a.primary_diagnosis= 'Dementia';

--5.Display every patient's first_name. Order the list by the length of each name and then by alphabetically.

SELECT first_name
FROM patients
ORDER BY LEN(first_name), first_name;

--6.Show the total amount of male patients and the total amount of female patients in the patients table. Display the two results in the same row. 

SELECT 
(SELECT COUNT(*) 
FROM patients 
WHERE gender='M') AS male_count, 
(SELECT COUNT(*) 
FROM patients 
WHERE gender='F') AS female_count
FROM patients;

--7.Show first and last name, allergies from patients which have allergies to either 'Penicillin' or 'Morphine'. Show results ordered ascending by allergies then by first_name then by last_name. 

SELECT first_name, last_name, allergies
FROM patients
WHERE allergies IN ('Penicillin', 'Morphine')
ORDER BY allergies, first_name, last_name;

--8.Show patient_id, primary_diagnosis from admissions. Find patients admitted multiple times for the same primary_diagnosis.

SELECT patient_id, primary_diagnosis
FROM admissions
GROUP BY patient_id, primary_diagnosis
HAVING COUNT(admission_date)>1;

--9.Show the city and the total number of patients in the city in the order from most to least patients.

SELECT city, COUNT(*) AS total_patients
FROM patients
GROUP BY city
ORDER by total_patients DESC;

--10.Show first name, last name and role of every person that is either patient or physician. 

SELECT first_name, last_name, "Patient" AS role
FROM patients

UNION

SELECT first_name, last_name, "Physician" AS role
FROM physicians;

--11.Show all allergies ordered by popularity. Remove 'NKA' and NULL values from query.

SELECT allergies, COUNT(allergies) AS total_diagnosis
FROM patients
WHERE allergies IS NOT NULL
AND allergies <> 'NKA'
GROUP BY allergies
ORDER BY total_diagnosis DESC;

--12.Show all patient's first_name, last_name, and birth_date who were born in the 1970s decade. Sort the list starting from the earliest birth_date. 

SELECT first_name, last_name, birth_date
FROM patients
WHERE YEAR(birth_date) BETWEEN 1970 AND 1979
ORDER BY birth_date;

--13.We want to display each patient's full name in a single column. Their last_name in all upper letters must appear first, then first_name in all lower case letters. Separate the last_name and first_name with a comma. Order the list by the first_name in decending order 

SELECT CONCAT(UPPER(last_name),',',LOWER(first_name))
FROM patients
ORDER BY first_name DESC;

--14.Show the province_id(s), sum of height; where the total sum of its patient's height is greater than or equal to 7,000. 

SELECT province_id, SUM(height)
FROM patients
GROUP BY province_id
HAVING SUM(height) >= 7000;

--15.Show the difference between the largest weight and smallest weight for patients with the last name 'Maroni' 

SELECT MAX(weight)-MIN(weight)
FROM patients
WHERE last_name = 'Maroni';

--16. Show all of the days of the month (1-31) and how many admission_dates occurred on that day. Sort by the day with most admissions to least admissions.

SELECT DAY(admission_date) AS day_number, COUNT(*) AS number_of_admissions
FROM admissions
GROUP BY day_number
ORDER BY number_of_admissions DESC;

--17.Show the patient_id, nursing_unit_id, room, and bed for patient_id 542's most recent admission_date. 

SELECT patient_id, nursing_unit_id, room, bed
FROM admissions
WHERE patient_id = 542
ORDER BY admission_date DESC
LIMIT 1;

--18.Show the nursing_unit_id and count of admissions for each nursing_unit_id. Exclude the following nursing_unit_ids: 'CCU', 'OR', 'ICU', 'ER'. 

SELECT nursing_unit_id, COUNT(*)
FROM admissions
WHERE nursing_unit_id NOT IN ('CCU','OR','ICU','ER')
GROUP BY nursing_unit_id;

--19.Show patient_id, attending_physician_id, and primary_diagnosis for admissions that match one of the two criteria: 1. patient_id is an odd number and attending_physician_id is either 1, 5, or 19. 2. attending_physician_id contains a 2 and the length of patient_id is 3 characters. 

SELECT patient_id, attending_physician_id, primary_diagnosis
FROM admissions
WHERE (patient_id%2=1 AND attending_physician_id IN (1, 5, 19))
OR (attending_physician_id LIKE '%2%' AND LEN(patient_id) = 3);

--20.Show first_name, last_name, and the total amount of admissions attended for each physician. 

SELECT p.first_name, p.last_name, COUNT(patient_id)
FROM physicians AS p 
JOIN admissions AS a 
ON p.physician_id=a.attending_physician_id
GROUP BY p.first_name, p.last_name;

--21. For each physicain, display their id, full name, and the first and last admission date they attended. 

SELECT p.physician_id, 
CONCAT(p.first_name, ' ', p.last_name) as full_name, 
MIN(a.admission_date) AS first_admission, 
MAX(a.admission_date) AS last_admission
FROM physicians AS p
JOIN admissions AS a
ON p.physician_id=a.attending_physician_id
GROUP BY p.physician_id, full_name;


--Hard


--1.Show all of the patients grouped into weight groups. Show the total amount of patients in each weight group. Order the list by the weight group decending. 

WITH tpatients AS (
  SELECT weight,
  CASE
  WHEN weight BETWEEN 130 AND 139 THEN '130'
  WHEN weight BETWEEN 120 AND 129 THEN '120'
  WHEN weight BETWEEN 110 AND 119 THEN '110'
  WHEN weight BETWEEN 100 AND 109 THEN '100'
  WHEN weight BETWEEN 90 AND 99 THEN '90'
  WHEN weight BETWEEN 80 AND 89 THEN '80'
  WHEN weight BETWEEN 70 AND 79 THEN '70'
  WHEN weight BETWEEN 60 AND 69 THEN '60'
  WHEN weight BETWEEN 50 AND 59 THEN '50'
  WHEN weight BETWEEN 40 AND 49 THEN '40'
  WHEN weight BETWEEN 30 AND 39 THEN '30'
  WHEN weight BETWEEN 20 AND 29 THEN '20'
  WHEN weight BETWEEN 10 AND 19 THEN '10'
  ELSE '0'
  END AS 'weight_group'
  FROM patients
)

SELECT COUNT(weight) AS patients_in_group, weight_group
FROM tpatients
GROUP BY weight_group
ORDER BY LEN(weight_group) DESC, weight_group DESC;

--2.Show patient_id, weight, height, isObese from the patients table. 

SELECT patient_id, weight, height, 
CASE
WHEN (weight/POWER((height/100.0), 2)) >=30 THEN '1'
ELSE '0'
END AS 'isObese'
FROM patients;

--3.Show patient_id, first_name, last_name, and attending physician's specialty. Show only the patients who has a primary_diagnosis as 'Dementia' and the physician's first name is 'Lisa' 

SELECT pat.patient_id, pat.first_name, pat.last_name, phy.specialty
FROM patients AS pat 
JOIN admissions AS adm 
ON pat.patient_id = adm.patient_id
JOIN physicians AS phy 
ON phy.physician_id = adm.attending_physician_id
WHERE adm.primary_diagnosis = 'Dementia'
AND phy.first_name = 'Lisa';

--4.Show the patient_id and temp_password. The password must be the following, in order: 1. patient_id 2. the numerical length of patient's last_name 3. year of patient's birth_date 

SELECT p.patient_id, CONCAT(p.patient_id,LEN(p.last_name),YEAR(p.birth_date)) AS temp_password
FROM patients AS p 
JOIN admissions AS a 
ON p.patient_id=a.patient_id
GROUP BY p.patient_id
HAVING COUNT(admission_date)>=1;

--5.Each admission costs $50 for patients without insurance, and $10 for patients with insurance. All patients with an even patient_id have insurance. Give each patient a 'Yes' if they have insurance, and a 'No' if they don't have insurance. Add up the admission_total cost for each has_insurance group. 

SELECT
CASE WHEN patient_id%2=0 THEN 'Yes'
ELSE 'No'
END AS has_insurance,
SUM(CASE WHEN patient_id%2=0 THEN 10
ELSE 50
END) AS cost_after_insurance  
FROM admissions
GROUP BY has_insurance;

--6.Show the provinces that has more patients identified as 'M' than 'F'.

SELECT province_name
FROM provinces AS pro 
JOIN patients AS pat
ON pro.province_id=pat.province_id
GROUP BY province_name
HAVING SUM(
  CASE WHEN gender = 'M' THEN 1
  ELSE 0 END) 
> SUM(
  CASE WHEN gender = 'F' THEN 1 
  ELSE 0 END);

--7.We are looking for a specific patient. Pull all columns for the patient who matches the following criteria: 
--First_name contains an 'r' after the first two letters.
--Identifies their gender as 'F'
--Born in February, May, or December
--Their weight would be between 60kg and 80kg
--Their patient_id is an odd number
--They are from the city 'Halifax' 

SELECT *
FROM patients
WHERE first_name LIKE '__r%'
AND gender = 'F'
AND MONTH(birth_date) IN (02,05,12)
AND weight BETWEEN 60 AND 80
AND patient_id%2=1
AND city = 'Halifax';

